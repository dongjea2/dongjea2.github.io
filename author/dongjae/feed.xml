<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://dongjea2.github.io/author/dongjae/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://dongjea2.github.io/" rel="alternate" type="text/html" />
  <updated>2022-01-13T04:27:33+09:00</updated>
  <id>https://dongjea2.github.io/author/dongjae/feed.xml</id>

  
  
  

  
    <title type="html">Lv0부터 시작하는 코딩라이프 | </title>
  

  
    <subtitle>IT기술 , 독서 서평 etc.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">mybatis 실행연습</title>
      <link href="https://dongjea2.github.io/spring" rel="alternate" type="text/html" title="mybatis 실행연습" />
      <published>2022-01-12T10:18:00+09:00</published>
      <updated>2022-01-12T10:18:00+09:00</updated>
      <id>https://dongjea2.github.io/spring</id>
      <content type="html" xml:base="https://dongjea2.github.io/spring">&lt;h1&gt;백엔드 프로젝트 초기설정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;0.프로젝트 메이븐 프로젝트로 만들고 pom.xml에 아래내용 추가 &lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;여기 밑에 아래내용 붙여넣기!!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;details&gt;
    &lt;summary&gt;pom.xml dependencies 태그(클릭시 펼쳐짐)&lt;/summary&gt;



~~~xml
   
&lt;dependencies&gt;
	&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-context&lt;/artifactId&gt;
		&lt;version&gt;5.2.9.RELEASE&lt;/version&gt;
	&lt;/dependency&gt;
  
	&lt;!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8 --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;com.oracle.database.jdbc&lt;/groupId&gt;
		&lt;artifactId&gt;ojdbc8&lt;/artifactId&gt;
		&lt;version&gt;21.1.0.0&lt;/version&gt;
	&lt;/dependency&gt;
  
  &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;
		&lt;version&gt;5.2.9.RELEASE&lt;/version&gt;
	&lt;/dependency&gt;
	
	&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;log4j&lt;/groupId&gt;
		&lt;artifactId&gt;log4j&lt;/artifactId&gt;
		&lt;version&gt;1.2.17&lt;/version&gt;
	&lt;/dependency&gt;
	
	&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;
		&lt;version&gt;5.2.9.RELEASE&lt;/version&gt;
	&lt;/dependency&gt;
	
&lt;!-- 마이바티스+ 마이바티스 스프링(SqlSession 받기 편해짐)--&gt;
	&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
		&lt;artifactId&gt;mybatis&lt;/artifactId&gt;
		&lt;version&gt;3.5.6&lt;/version&gt;
	&lt;/dependency&gt;
	
	&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
		&lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;
		&lt;version&gt;2.0.6&lt;/version&gt;
	&lt;/dependency&gt;
	
	
	
	&lt;!-- 제이유닛 스프링에서 돌아가게 하는거 --&gt;
	&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-test --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-test&lt;/artifactId&gt;
		&lt;version&gt;5.2.9.RELEASE&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;!--     &lt;scope&gt;test&lt;scope&gt; --&gt;
	
	
	&lt;!-- 히카리cp -커넥션 풀 라이브러리 --&gt;
	&lt;!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;com.zaxxer&lt;/groupId&gt;
		&lt;artifactId&gt;HikariCP&lt;/artifactId&gt;
		&lt;version&gt;3.4.5&lt;/version&gt;
	&lt;/dependency&gt;
	
	&lt;!--히카리용 로그포제이  --&gt;
	&lt;!-- Logging --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.6.6&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;
			&lt;version&gt;1.6.6&lt;/version&gt;
			&lt;!-- &lt;scope&gt;runtime&lt;/scope&gt; --&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.6.6&lt;/version&gt;
			&lt;!-- &lt;scope&gt;runtime&lt;/scope&gt; --&gt;
		&lt;/dependency&gt;
	
		&lt;dependency&gt;
			&lt;groupId&gt;org.bgee.log4jdbc-log4j2&lt;/groupId&gt;
			&lt;artifactId&gt;log4jdbc-log4j2-jdbc4&lt;/artifactId&gt;
			&lt;version&gt;1.16&lt;/version&gt;
		&lt;/dependency&gt;
	
		 &lt;!--스프링용 JSON 라이브러리 (자동으로 Map값 리턴하면 맞춰줌) --&gt;

		&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
			&lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
			&lt;version&gt;2.12.5&lt;/version&gt;
		&lt;/dependency&gt;
&lt;/dependencies&gt;
~~~

&lt;/details&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;1.src-&amp;gt;test 폴더 만들기 &lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;그 속에 java, resources 폴더 각각 생성 (src/test/java) , (src/test/resources)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;2.src-&amp;gt;main -&amp;gt; resources (위에꺼랑 경로 다름)폴더 생성 &lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이 폴더속에는 log4j.xml , mybatis-config.xml , 매퍼xml 등등..이 들어간다.
(src/main/resources함
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;3. 빌드패스 등록&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이제 1번, 2번에서 만든 폴더들을 빌드패스 등록해야한다.

1.프로젝트를 우클릭 하여 Build Path -&amp;gt;Configure Build Path 클릭
2.Source 탭 클릭
3.add Folder 클릭
4.추가(방금 만든 폴더들 체크박스 클릭하면 추가됨)


 
   {자기가만든 프로젝트이름}/src/test/java
   {자기가만든 프로젝트이름}/src/test/resources

   {자기가만든 프로젝트이름}/src/main/resources 가 소스탭에 추가되어야함
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;3. src/main/webapp/WEN_INF 폴더에 -&amp;gt; web.xml만들기&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xml파일 생성후 아래 구문 복사해서 붙여넣고 저장.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;              
              &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;appServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;/WEB-INF/spring/appServlet/servlet-context.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;load-on-startup&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/load-on-startup&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;appServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	이제 추가로 위의 web.xml파일의 내용인
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;/WEB-INF/spring/appServlet/servlet-context.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
			이 경로에 실제 폴더와 파일(servlet_context.xml) 만들기
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;꼭 폴더 경로와 , servelt-context.xml 만들것&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;4.(WEB-INF/spring/appServlet )servlet-context.xml 내용&lt;/h1&gt;

&lt;details&gt;

~~~xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;&gt;

&lt;context:annotation-config&gt;&lt;/context:annotation-config&gt;

&lt;!--DataSource 히카리 cp  --&gt;
	&lt;bean id=&quot;hikariConfig&quot; class=&quot;com.zaxxer.hikari.HikariConfig&quot;&gt;
		&lt;!--  이렇게 하면 스프링 컨테이너에서 작동하는 sql 구문을 로그로 볼수 있게됨--&gt;
		&lt;property name=&quot;driverClassName&quot; value=&quot;net.sf.log4jdbc.sql.jdbcapi.DriverSpy&quot; /&gt; 
		&lt;property name=&quot;jdbcUrl&quot; value=&quot;jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:XE&quot; /&gt;
		
		&lt;property name=&quot;username&quot; value=&quot;hr&quot;&gt;&lt;/property&gt;
		&lt;property name=&quot;password&quot; value=&quot;hr&quot;&gt;&lt;/property&gt;
		&lt;property name=&quot;maximumPoolSize&quot; value=&quot;10&quot;&gt;&lt;/property&gt;
		&lt;property name=&quot;minimumIdle&quot; value=&quot;2&quot;&gt;&lt;/property&gt;
	&lt;/bean&gt;
	
&lt;bean id=&quot;dataSource&quot; class=&quot;com.zaxxer.hikari.HikariDataSource&quot;&gt;
		&lt;constructor-arg ref=&quot;hikariConfig&quot;&gt;&lt;/constructor-arg&gt;
	&lt;/bean&gt;


&lt;!--Mybatis-spring용 SqlSessionFactoryBean--&gt;
	&lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;
	&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt;
	&lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;
	&lt;/property&gt;
	&lt;/bean&gt;

&lt;!--com.my.board.dao패키지의 @Repository클래스들--&gt;
	&lt;context:component-scan base-package=&quot;com.my.board.dao&quot; /&gt;
	

&lt;/beans&gt;
~~~
&lt;br /&gt;
&lt;br /&gt;

&lt;/details&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	xml 내용 설명
	    1.dateSource -&amp;gt;히카리데이터소스(class)

		2.construc-arg-&amp;gt; (히카리config 참조)

	    3.sqlSessionFactory -&amp;gt;SqlSessionBean Class
			(프로퍼티1+ 이름=dataSource 참조=datasoucre
			(프로퍼티2+ 이름=configLocation 값=classpath:mybatis-config.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;5.src/main/resources에 log4j.xml+ mybatis-confg 추가&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	      log4jdbc.log4j2.propreties추가
	      mybatis-config.xml추가
	      알아서 마이바티스 홈페이지 가서 참고한 후 여러가지 매퍼들 추가
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;log4j.xml &lt;/h1&gt;

&lt;details&gt;

~~~xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!-- &lt;!DOCTYPE log4j:configuration PUBLIC &quot;-//APACHE//DTD LOG4J 1.2//EN&quot; &quot;log4j.dtd&quot;&gt; --&gt;
&amp;lt;!DOCTYPE log4j:configuration SYSTEM    &quot;http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd&quot;&amp;gt;

&lt;log4j:configuration xmlns:log4j=&quot;http://jakarta.apache.org/log4j/&quot;&gt;

	&lt;!-- Appenders --&gt;
	&lt;appender name=&quot;console&quot; class=&quot;org.apache.log4j.ConsoleAppender&quot;&gt;
		&lt;param name=&quot;Target&quot; value=&quot;System.out&quot; /&gt;
		&lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;
			&lt;param name=&quot;ConversionPattern&quot; value=&quot;%-5p: %c - %m%n&quot; /&gt;
									&lt;!-- 소문자c 카테고리 , %m로그.인포의 메시지  --&gt;
		&lt;/layout&gt;
	&lt;/appender&gt;
	
	&lt;!-- Application Loggers --&gt;
	&lt;logger name=&quot;com.my.vo&quot;&gt;
		&lt;level value=&quot;error&quot; /&gt;
	&lt;/logger&gt;
	
	&lt;!-- 3rdparty Loggers --&gt;
	&lt;logger name=&quot;org.springframework.core&quot;&gt;
		&lt;level value=&quot;info&quot; /&gt;
	&lt;/logger&gt;	
	
	&lt;logger name=&quot;org.springframework.beans&quot;&gt;
		&lt;level value=&quot;info&quot; /&gt;
	&lt;/logger&gt;
	
	&lt;logger name=&quot;org.springframework.context&quot;&gt;
		&lt;level value=&quot;info&quot; /&gt;
	&lt;/logger&gt;

	&lt;logger name=&quot;org.springframework.web&quot;&gt;
		&lt;level value=&quot;info&quot; /&gt;
	&lt;/logger&gt;

	&lt;!-- Root Logger --&gt;
	&lt;root&gt;
		&lt;priority value=&quot;info&quot; /&gt;
		&lt;!-- 실제 배포떄는 info에서 프라이어티레벨을 에러단계로 올리면 에러만 표기ㅏ됨  --&gt;
		&lt;appender-ref ref=&quot;console&quot; /&gt;
	&lt;/root&gt;	
&lt;/log4j:configuration&gt;
~~~

&lt;/details&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;mybatis-config.xml &lt;/h1&gt;

&lt;details&gt;

~~~xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
&amp;lt;!DOCTYPE configuration
  PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;
  &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&amp;gt;
&lt;configuration&gt;
	&lt;settings&gt;
		&lt;!-- 언더스코어를 자동으로 카멜케이스로 매핑해주는 기능 --&gt;
		&lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot; /&gt;
		&lt;setting name=&quot;jdbcTypeForNull&quot; value=&quot;NULL&quot; /&gt;
	&lt;/settings&gt;

	&lt;typeAliases&gt;
		&lt;!-- 프로덕트vo 경로 매번 설정하기 귀찮을떈 Alias 생성 --&gt;
		&lt;typeAlias type=&quot;com.my.customer.vo.Customer&quot; alias=&quot;Customer&quot; /&gt;
		&lt;typeAlias type=&quot;com.my.board.vo.RepBoard&quot; alias=&quot;RepBoard&quot; /&gt;

	&lt;/typeAliases&gt;

  &lt;environments default=&quot;development&quot;&gt;
    &lt;environment id=&quot;development&quot;&gt;
      &lt;transactionManager type=&quot;JDBC&quot; /&gt;
      &lt;dataSource type=&quot;POOLED&quot;&gt;
        &lt;property name=&quot;driver&quot; value=&quot;oracle.jdbc.driver.OracleDriver&quot; /&gt;
        &lt;property name=&quot;url&quot; value=&quot;jdbc:oracle:thin:@localhost:1521:xe&quot; /&gt;
        &lt;property name=&quot;username&quot; value=&quot;hr&quot; /&gt;
        &lt;property name=&quot;password&quot; value=&quot;hr&quot; /&gt;
      &lt;/dataSource&gt;
    &lt;/environment&gt;
  &lt;/environments&gt;

  &lt;mappers&gt;
    &lt;mapper resource=&quot;RepBoardMapper.xml&quot; /&gt;
  &lt;/mappers&gt;
&lt;/configuration&gt;
~~~

&lt;/details&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;6. src/test/resources/   log4jdbc.log4j2.properties파일 생성&lt;/h1&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;log4jdbc.spylogdelegator.name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;7. Junit4 임포트 &lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	src/test/java 패키지에 new -&amp;gt;others..-&amp;gt; JAVA-&amp;gt; JUnit 
												
											-&amp;gt;JUint Test Case
클릭후 아무 이름 생성 후 next

&amp;lt;중요&amp;gt; New JUint 4 test( o ) 라디오 버튼 클릭후 생성하면
자동으로 임포트됨
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	
&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.my.board.dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;junit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.runner.RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.test.context.ContextConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.test.context.junit4.SpringJUnit4ClassRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.my.board.vo.RepBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.my.exception.FindException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.my.exception.ModifyException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpringJUnit4ClassRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ContextConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&quot;file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RepBoardDAOOracleTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	
	&lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;RepBoardDAOOracle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testFindAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ModifyException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FindException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
		
		&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RepBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findByNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;제목2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoardTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	제대로 임포트 됬다면 아래코드에서 @RunWith에 빨간줄 안생길것

	메소드 내용은 달라도 , 위의 어노테이션 설정들은 그대로

	@Test 꼭붙여서 JUit 테스트 할것!

	테스트 방법 : 만든 메소드 이름부분(리턴타입 바로 뒤) 드래그
	1.testFindAll() 이부분 드래그

	2.드래그 한부분 우클릭 

	3.Run as.. -&amp;gt; JUnit Test 클릭하면 됨.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>동재</name>
        
        
      </author>

      

      
        <category term="spring" />
      

      
        <summary type="html">백엔드 프로젝트 초기설정</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Strategy Pattern(스트레티지 패턴)</title>
      <link href="https://dongjea2.github.io/strategy" rel="alternate" type="text/html" title="Strategy Pattern(스트레티지 패턴)" />
      <published>2022-01-08T19:18:00+09:00</published>
      <updated>2022-01-08T19:18:00+09:00</updated>
      <id>https://dongjea2.github.io/strategy</id>
      <content type="html" xml:base="https://dongjea2.github.io/strategy">&lt;p&gt;이 글은 스트레티지 패턴에 관한 학습 코드입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;syntaxHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./strategy&quot;&gt;디자인 패턴(1) - Strategy 스트레티지 &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./strategy&quot;&gt;디자인 패턴(2) - Observer 옵저버 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>동재</name>
        
        
      </author>

      

      
        <category term="design-patterns" />
      

      
        <summary type="html">이 글은 스트레티지 패턴에 관한 학습 코드입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">존 메이너드 케인즈</title>
      <link href="https://dongjea2.github.io/JOHN_MAYNARD_KEYNES" rel="alternate" type="text/html" title="존 메이너드 케인즈" />
      <published>2022-01-08T19:13:00+09:00</published>
      <updated>2022-01-08T19:13:00+09:00</updated>
      <id>https://dongjea2.github.io/JOHN_MAYNARD_KEYNES</id>
      <content type="html" xml:base="https://dongjea2.github.io/JOHN_MAYNARD_KEYNES">&lt;p&gt;이 글은 존메이너드 케인즈 에대한 서평입니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>동재</name>
        
        
      </author>

      

      
        <category term="book" />
      

      
        <summary type="html">이 글은 존메이너드 케인즈 에대한 서평입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">스프링 MVC 아키텍처</title>
      <link href="https://dongjea2.github.io/spring" rel="alternate" type="text/html" title="스프링 MVC 아키텍처" />
      <published>2022-01-03T19:18:00+09:00</published>
      <updated>2022-01-03T19:18:00+09:00</updated>
      <id>https://dongjea2.github.io/spring</id>
      <content type="html" xml:base="https://dongjea2.github.io/spring"></content>

      
      
      
      
      

      <author>
          <name>동재</name>
        
        
      </author>

      

      
        <category term="spring" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
